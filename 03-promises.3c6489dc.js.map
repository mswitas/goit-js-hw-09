{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SAIA,SAASC,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3BC,YAAW,WACT,IAAMC,EAAgBC,KAAKC,SAAW,GAChCC,EAAgB,CAAET,SAAUA,EAAUC,MAAOA,GAC/CK,EACFH,EAAQM,GAERL,EAAOK,E,GAGRR,E,eAgCMS,SAASC,cAAc,SAC/BC,iBAAiB,UA3BtB,SAAsBC,GACpBA,EAAMC,iBASN,IARA,IAEuBC,EAAnBF,EAAMG,cADRC,SAAYC,EAAKH,EAALd,MAAOkB,EAAIJ,EAAJI,KAAMC,EAAML,EAANK,OAErBC,EAAWC,OAAOJ,EAAMK,OACxBC,EAAUF,OAAOH,EAAKI,OACtBE,EAAYH,OAAOF,EAAOG,OAC5BG,EAAU,EACVC,EAAYN,EACTK,GAAWD,GAChB1B,EAAc2B,EAASC,GAClBC,MAAK,SAAAC,G,IAAG7B,EAAQ6B,EAAR7B,SAAUC,EAAK4B,EAAL5B,MACjB6B,QAAQC,IAAI,uBAAwCC,OAAfhC,EAAS,QAAYgC,OAAN/B,EAAM,OAC1DgC,EAAApC,GAASqC,OAAOC,QAAQ,uBAAwCH,OAAfhC,EAAS,QAAYgC,OAAN/B,EAAM,M,IAEvEmC,OAAM,SAAAP,G,IAAG7B,EAAQ6B,EAAR7B,SAAUC,EAAK4B,EAAL5B,MAClB6B,QAAQC,IAAI,sBAAuCC,OAAfhC,EAAS,QAAYgC,OAAN/B,EAAM,OACzDgC,EAAApC,GAASqC,OAAOG,QAAQ,sBAAqCL,OAAfhC,EAAS,QAAYgC,OAAN/B,EAAM,M,IAEzEyB,IACAC,GAAaH,C","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\nimport { Notify } from 'notiflix/build/notiflix-notify-aio';\n\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      const shouldResolve = Math.random() > 0.3;\n      const promiseObject = { position: position, delay: delay }\n      if (shouldResolve) {\n        resolve(promiseObject);\n      } else {\n        reject(promiseObject);\n      }\n      \n    }, delay);\n  });\n}\n\n\n\nfunction handleSubmit(event) {\n  event.preventDefault();\n  const {\n    elements: { delay, step, amount }\n  } = event.currentTarget;\n  const delayNum = Number(delay.value);\n  const stepNum = Number(step.value);\n  const amountNum = Number(amount.value); \n  let positon = 1;\n  let loopDelay = delayNum;\n  while (positon <= amountNum) {\n    createPromise(positon, loopDelay)\n        .then(({ position, delay }) => {\n          console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n          Notiflix.Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n        })\n        .catch(({ position, delay }) => {\n          console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n          Notiflix.Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n        });\n    positon++;\n    loopDelay += stepNum;\n  }\n  \n}\n\nconst form = document.querySelector('.form');\nform.addEventListener('submit', handleSubmit);\n"],"names":["$6JpON","parcelRequire","$ce04d3a99e08e73b$var$createPromise","position","delay","Promise","resolve","reject","setTimeout","shouldResolve","Math","random","promiseObject","document","querySelector","addEventListener","event","preventDefault","_elements","currentTarget","elements","delay1","step","amount","delayNum","Number","value","stepNum","amountNum","positon","loopDelay","then","param","console","log","concat","$parcel$interopDefault","Notify","success","catch","failure"],"version":3,"file":"03-promises.3c6489dc.js.map"}