{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SAOA,SAASC,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3BC,YAAW,KACT,MAAMC,EAAgBC,KAAKC,SAAW,GAChCC,EAAgB,CAAET,SAAUA,EAAUC,MAAOA,GAC/CK,EACFH,EAAQM,GAERL,EAAOK,EAAc,GAGtBR,EAAM,G,wDAgCAS,SAASC,cAAc,SAC/BC,iBAAiB,UA3BtB,SAAsBC,GACpBA,EAAMC,iBACN,MACEC,UAAYd,MAAAe,EAAKC,KAAEA,EAAIC,OAAEA,IACvBL,EAAMM,cACJC,EAAWC,OAAOL,EAAMM,OACxBC,EAAUF,OAAOJ,EAAKK,OACtBE,EAAYH,OAAOH,EAAOI,OAChC,IAAIG,EAAU,EACVC,EAAYN,EAChB,KAAOK,GAAWD,GAChBzB,EAAc0B,EAASC,GAClBC,MAAK,EAAC3B,SAAEA,EAAQC,MAAEA,MACjB2B,QAAQC,IAAI,uBAAqB7B,QAAiBC,OAClD6B,EAAAjC,GAASkC,OAAOC,QAAQ,uBAAqBhC,QAAiBC,MAAU,IAEzEgC,OAAM,EAACjC,SAAEA,EAAQC,MAAEA,MAClB2B,QAAQC,IAAI,sBAAoB7B,QAAiBC,OACjD6B,EAAAjC,GAASkC,OAAOG,QAAQ,sBAAoBlC,QAAeC,MAAU,IAE3EwB,IACAC,GAAaH,C","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\nimport { Notify } from 'notiflix/build/notiflix-notify-aio';\nimport { Report } from 'notiflix/build/notiflix-report-aio';\nimport { Confirm } from 'notiflix/build/notiflix-confirm-aio';\nimport { Loading } from 'notiflix/build/notiflix-loading-aio';\nimport { Block } from 'notiflix/build/notiflix-block-aio';\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      const shouldResolve = Math.random() > 0.3;\n      const promiseObject = { position: position, delay: delay }\n      if (shouldResolve) {\n        resolve(promiseObject);\n      } else {\n        reject(promiseObject);\n      }\n      \n    }, delay);\n  });\n}\n\n\n\nfunction handleSubmit(event) {\n  event.preventDefault();\n  const {\n    elements: { delay, step, amount }\n  } = event.currentTarget;\n  const delayNum = Number(delay.value);\n  const stepNum = Number(step.value);\n  const amountNum = Number(amount.value); \n  let positon = 1;\n  let loopDelay = delayNum;\n  while (positon <= amountNum) {\n    createPromise(positon, loopDelay)\n        .then(({ position, delay }) => {\n          console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n          Notiflix.Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n        })\n        .catch(({ position, delay }) => {\n          console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n          Notiflix.Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n        });\n    positon++;\n    loopDelay += stepNum;\n  }\n  \n}\n\nconst form = document.querySelector('.form');\nform.addEventListener('submit', handleSubmit);\n"],"names":["$7Y9D8","parcelRequire","$47d4ff9957288465$var$createPromise","position","delay","Promise","resolve","reject","setTimeout","shouldResolve","Math","random","promiseObject","document","querySelector","addEventListener","event","preventDefault","elements","delay1","step","amount","currentTarget","delayNum","Number","value","stepNum","amountNum","positon","loopDelay","then","console","log","$parcel$interopDefault","Notify","success","catch","failure"],"version":3,"file":"03-promises.0cde517e.js.map"}